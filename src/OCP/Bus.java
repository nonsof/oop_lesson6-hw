//код описывает класс Bus, который наследуется от класса Vehicle и переопределяет метод calculateAllowedSpeed(). Давайте прокомментируем этот код и рассмотрим принцип открытости/закрытости (Open/Closed Principle - OCP) и другие аспекты:
package OCP;

public class Bus extends Vehicle {
    // Конструктор класса Bus, принимающий максимальную скорость автобуса
    public Bus(int maxSpeed) {
        super(maxSpeed, "Bus");
    }

    // Переопределенный метод для расчета допустимой скорости автобуса
    @Override
    public double calculateAllowedSpeed() {
        // Расчет допустимой скорости, в данном случае, половина максимальной скорости
        return super.getMaxSpeed() * 0.5;
    }
}
//Принцип открытости/закрытости (Open/Closed Principle - OCP): Ваш класс Bus соблюдает OCP, так как он расширяет функциональность базового класса Vehicle, переопределяя метод calculateAllowedSpeed(), но не изменяя сам базовый класс Vehicle. Это позволяет добавлять новые типы транспортных средств, такие как автобусы, не модифицируя существующий код класса Vehicle.

//Конструктор класса: Конструктор класса Bus принимает максимальную скорость автобуса и вызывает конструктор суперкласса Vehicle с этим значением и типом транспортного средства "Bus". Это позволяет задавать максимальную скорость и тип транспортного средства при создании объекта Bus.

//Метод calculateAllowedSpeed(): Этот метод переопределяет метод из суперкласса Vehicle. В данном случае, он вычисляет допустимую скорость автобуса как половину максимальной скорости, используя метод getMaxSpeed() из суперкласса.
