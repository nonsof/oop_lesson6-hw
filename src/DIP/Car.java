//класс Car представляет собой часть кода, демонстрирующую начало принципа инверсии зависимостей (Dependency Inversion Principle - DIP). Давайте прокомментируем этот код:

package DIP;

public class Car {
    public Engine engine;

    public Car(Engine engine) {
        this.engine = engine;
    }
    public void start(){
        engine.start();
    }
}


//Свойство engine: Класс Car содержит свойство engine, которое представляет двигатель автомобиля. Это свойство инкапсулирует зависимость между автомобилем и его двигателем.

//Конструктор класса Car: Класс Car имеет конструктор, который принимает объект Engine в качестве параметра. Это означает, что при создании объекта Car, вы должны предоставить экземпляр двигателя. Это также является формой внедрения зависимостей (Dependency Injection), что соответствует принципу инверсии зависимостей.

//Метод start(): Метод start() класса Car вызывает метод start() у своего двигателя, что позволяет автомобилю запустить двигатель. Это демонстрирует, как класс Car зависит от абстракции (интерфейса или абстрактного класса), а не от конкретной реализации двигателя.
